swagger: '2.0'
info:
  description: >-
    Maritime Cloud Service Registry, developed under the Horizon 2020 Project
    EfficienSea2, cofunded by the European Union.
  version: '1.0'
  title: Maritime Cloud Service Registry API
  contact:
    name: Frequentis AG
    url: 'http://www.frequentis.com'
    email: josef.jahn@frequentis.com
  license:
    name: AGPLv3
    url: 'https:/www.gnu.org/licenses/agpl-3.0.en.html'
host: 'sr.maritimecloud.net:8080'
basePath: /
schemes:
  - http
tags:
  - name: technical-design-resource
    description: Technical Design Resource
  - name: xsd-resource
    description: Xsd Resource
  - name: doc-resource
    description: Doc Resource
  - name: xml-resource
    description: Xml Resource
  - name: elasticsearch-index-resource
    description: Elasticsearch Index Resource
  - name: service-instance-resource
    description: Service Instance Resource
  - name: service-specification-resource
    description: Service Specification Resource
  - name: specification-template-resource
    description: Specification Template Resource
paths:
  /api/_search/docs:
    get:
      tags:
        - doc-resource
      summary: searchDocs
      operationId: searchDocsUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: page
          in: query
          description: Page number of the requested page
          required: false
          type: integer
          format: int32
        - name: size
          in: query
          description: Size of a page
          required: false
          type: integer
          format: int32
        - name: query
          in: query
          description: query
          required: true
          type: string
        - name: sort
          in: query
          description: >-
            Sorting criteria in the format: property(,asc|desc). Default sort
            order is ascending. Multiple sort criteria are supported.
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Doc'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/_search/serviceInstance:
    get:
      tags:
        - service-instance-resource
      summary: searchInstances
      operationId: searchInstancesUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: page
          in: query
          description: Page number of the requested page
          required: false
          type: integer
          format: int32
        - name: size
          in: query
          description: Size of a page
          required: false
          type: integer
          format: int32
        - name: query
          in: query
          description: query
          required: true
          type: string
        - name: sort
          in: query
          description: >-
            Sorting criteria in the format: property(,asc|desc). Default sort
            order is ascending. Multiple sort criteria are supported.
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Instance'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/_search/serviceSpecification:
    get:
      tags:
        - service-specification-resource
      summary: searchSpecifications
      operationId: searchSpecificationsUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: page
          in: query
          description: Page number of the requested page
          required: false
          type: integer
          format: int32
        - name: size
          in: query
          description: Size of a page
          required: false
          type: integer
          format: int32
        - name: query
          in: query
          description: query
          required: true
          type: string
        - name: sort
          in: query
          description: >-
            Sorting criteria in the format: property(,asc|desc). Default sort
            order is ascending. Multiple sort criteria are supported.
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Specification'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/_search/specification-templates:
    get:
      tags:
        - specification-template-resource
      summary: searchSpecificationTemplates
      operationId: searchSpecificationTemplatesUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: page
          in: query
          description: Page number of the requested page
          required: false
          type: integer
          format: int32
        - name: size
          in: query
          description: Size of a page
          required: false
          type: integer
          format: int32
        - name: query
          in: query
          description: query
          required: true
          type: string
        - name: sort
          in: query
          description: >-
            Sorting criteria in the format: property(,asc|desc). Default sort
            order is ascending. Multiple sort criteria are supported.
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/SpecificationTemplate'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/_search/technicalDesign:
    get:
      tags:
        - technical-design-resource
      summary: searchDesigns
      operationId: searchDesignsUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: page
          in: query
          description: Page number of the requested page
          required: false
          type: integer
          format: int32
        - name: size
          in: query
          description: Size of a page
          required: false
          type: integer
          format: int32
        - name: query
          in: query
          description: query
          required: true
          type: string
        - name: sort
          in: query
          description: >-
            Sorting criteria in the format: property(,asc|desc). Default sort
            order is ascending. Multiple sort criteria are supported.
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Design'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/_search/xmls:
    get:
      tags:
        - xml-resource
      summary: searchXmls
      operationId: searchXmlsUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: page
          in: query
          description: Page number of the requested page
          required: false
          type: integer
          format: int32
        - name: size
          in: query
          description: Size of a page
          required: false
          type: integer
          format: int32
        - name: query
          in: query
          description: query
          required: true
          type: string
        - name: sort
          in: query
          description: >-
            Sorting criteria in the format: property(,asc|desc). Default sort
            order is ascending. Multiple sort criteria are supported.
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Xml'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/_search/xsds:
    get:
      tags:
        - xsd-resource
      summary: searchXsds
      operationId: searchXsdsUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: page
          in: query
          description: Page number of the requested page
          required: false
          type: integer
          format: int32
        - name: size
          in: query
          description: Size of a page
          required: false
          type: integer
          format: int32
        - name: query
          in: query
          description: query
          required: true
          type: string
        - name: sort
          in: query
          description: >-
            Sorting criteria in the format: property(,asc|desc). Default sort
            order is ascending. Multiple sort criteria are supported.
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Xsd'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/_searchGeometryGeoJSON/serviceInstance:
    get:
      tags:
        - service-instance-resource
      summary: searchInstancesByGeometryGeojson
      description: Returns all service instances matching the specified GeoJson shape.
      operationId: searchInstancesByGeometryGeojsonUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: page
          in: query
          description: Page number of the requested page
          required: false
          type: integer
          format: int32
        - name: size
          in: query
          description: Size of a page
          required: false
          type: integer
          format: int32
        - name: geometry
          in: query
          description: geometry
          required: true
          type: string
        - name: sort
          in: query
          description: >-
            Sorting criteria in the format: property(,asc|desc). Default sort
            order is ascending. Multiple sort criteria are supported.
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Instance'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/_searchGeometryWKT/serviceInstance:
    get:
      tags:
        - service-instance-resource
      summary: searchInstancesByGeometryWKT
      description: Returns all service instances matching the specified WKT shape.
      operationId: searchInstancesByGeometryWKTUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: page
          in: query
          description: Page number of the requested page
          required: false
          type: integer
          format: int32
        - name: size
          in: query
          description: Size of a page
          required: false
          type: integer
          format: int32
        - name: geometry
          in: query
          description: geometry
          required: true
          type: string
        - name: sort
          in: query
          description: >-
            Sorting criteria in the format: property(,asc|desc). Default sort
            order is ascending. Multiple sort criteria are supported.
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Instance'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/_searchKeywords/serviceInstance:
    get:
      tags:
        - service-instance-resource
      summary: searchInstancesByKeywords
      operationId: searchInstancesByKeywordsUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: page
          in: query
          description: Page number of the requested page
          required: false
          type: integer
          format: int32
        - name: size
          in: query
          description: Size of a page
          required: false
          type: integer
          format: int32
        - name: query
          in: query
          description: query
          required: true
          type: string
        - name: sort
          in: query
          description: >-
            Sorting criteria in the format: property(,asc|desc). Default sort
            order is ascending. Multiple sort criteria are supported.
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Instance'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/_searchLocation/serviceInstance:
    get:
      tags:
        - service-instance-resource
      summary: searchInstancesByLocation
      description: >-
        Returns all service instances matching the specified Lat/Lon
        coordinates.
      operationId: searchInstancesByLocationUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: page
          in: query
          description: Page number of the requested page
          required: false
          type: integer
          format: int32
        - name: size
          in: query
          description: Size of a page
          required: false
          type: integer
          format: int32
        - name: latitude
          in: query
          description: latitude
          required: true
          type: string
        - name: longitude
          in: query
          description: longitude
          required: true
          type: string
        - name: sort
          in: query
          description: >-
            Sorting criteria in the format: property(,asc|desc). Default sort
            order is ascending. Multiple sort criteria are supported.
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Instance'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/_searchUnlocode/serviceInstance:
    get:
      tags:
        - service-instance-resource
      summary: searchInstancesByUnlocode
      description: Returns all service instances matching the specified UnLoCode.
      operationId: searchInstancesByUnlocodeUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: page
          in: query
          description: Page number of the requested page
          required: false
          type: integer
          format: int32
        - name: size
          in: query
          description: Size of a page
          required: false
          type: integer
          format: int32
        - name: query
          in: query
          description: query
          required: true
          type: string
        - name: sort
          in: query
          description: >-
            Sorting criteria in the format: property(,asc|desc). Default sort
            order is ascending. Multiple sort criteria are supported.
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Instance'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/docs:
    get:
      tags:
        - doc-resource
      summary: getAllDocs
      operationId: getAllDocsUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: page
          in: query
          description: Page number of the requested page
          required: false
          type: integer
          format: int32
        - name: size
          in: query
          description: Size of a page
          required: false
          type: integer
          format: int32
        - name: sort
          in: query
          description: >-
            Sorting criteria in the format: property(,asc|desc). Default sort
            order is ascending. Multiple sort criteria are supported.
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Doc'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - doc-resource
      summary: createDoc
      operationId: createDocUsingPOST
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: doc
          description: doc
          required: true
          schema:
            $ref: '#/definitions/Doc'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Doc'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
        - doc-resource
      summary: updateDoc
      operationId: updateDocUsingPUT
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: doc
          description: doc
          required: true
          schema:
            $ref: '#/definitions/Doc'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Doc'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/api/docs/{id}':
    get:
      tags:
        - doc-resource
      summary: getDoc
      operationId: getDocUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Doc'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
      tags:
        - doc-resource
      summary: deleteDoc
      operationId: deleteDocUsingDELETE
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /api/elasticsearch/index:
    post:
      tags:
        - elasticsearch-index-resource
      summary: reindexAll
      operationId: reindexAllUsingPOST
      consumes:
        - application/json
      produces:
        - text/plain
      responses:
        '200':
          description: OK
          schema:
            type: string
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/serviceInstance:
    get:
      tags:
        - service-instance-resource
      summary: getAllInstances
      operationId: getAllInstancesUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: page
          in: query
          description: Page number of the requested page
          required: false
          type: integer
          format: int32
        - name: size
          in: query
          description: Size of a page
          required: false
          type: integer
          format: int32
        - name: sort
          in: query
          description: >-
            Sorting criteria in the format: property(,asc|desc). Default sort
            order is ascending. Multiple sort criteria are supported.
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Instance'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - service-instance-resource
      summary: createInstance
      operationId: createInstanceUsingPOST
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: instance
          description: instance
          required: true
          schema:
            $ref: '#/definitions/Instance'
        - name: Authorization
          in: header
          description: Authorization
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Instance'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
        - service-instance-resource
      summary: updateInstance
      operationId: updateInstanceUsingPUT
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: instance
          description: instance
          required: true
          schema:
            $ref: '#/definitions/Instance'
        - name: Authorization
          in: header
          description: Authorization
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Instance'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/api/serviceInstance/{id}':
    get:
      tags:
        - service-instance-resource
      summary: getAllInstancesById
      operationId: getAllInstancesByIdUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: page
          in: query
          description: Page number of the requested page
          required: false
          type: integer
          format: int32
        - name: size
          in: query
          description: Size of a page
          required: false
          type: integer
          format: int32
        - name: id
          in: path
          description: id
          required: true
          type: string
        - name: sort
          in: query
          description: >-
            Sorting criteria in the format: property(,asc|desc). Default sort
            order is ascending. Multiple sort criteria are supported.
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Instance'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/api/serviceInstance/{id}/{version}':
    get:
      tags:
        - service-instance-resource
      summary: getInstance
      description: >-
        Returns the service instance with the specified id and version. Use
        version 'latest' to get the newest one.
      operationId: getInstanceUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: string
        - name: version
          in: path
          description: version
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Instance'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
      tags:
        - service-instance-resource
      summary: deleteInstance
      operationId: deleteInstanceUsingDELETE
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: string
        - name: version
          in: path
          description: version
          required: true
          type: string
        - name: Authorization
          in: header
          description: Authorization
          required: true
          type: string
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  '/api/serviceInstance/{id}/{version}/status':
    put:
      tags:
        - service-instance-resource
      summary: updateInstanceStatus
      operationId: updateInstanceStatusUsingPUT
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: string
        - name: version
          in: path
          description: version
          required: true
          type: string
        - name: status
          in: query
          description: status
          required: true
          type: string
        - name: Authorization
          in: header
          description: Authorization
          required: true
          type: string
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/serviceSpecification:
    get:
      tags:
        - service-specification-resource
      summary: getAllSpecifications
      operationId: getAllSpecificationsUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: page
          in: query
          description: Page number of the requested page
          required: false
          type: integer
          format: int32
        - name: size
          in: query
          description: Size of a page
          required: false
          type: integer
          format: int32
        - name: sort
          in: query
          description: >-
            Sorting criteria in the format: property(,asc|desc). Default sort
            order is ascending. Multiple sort criteria are supported.
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Specification'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - service-specification-resource
      summary: createSpecification
      operationId: createSpecificationUsingPOST
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: specification
          description: specification
          required: true
          schema:
            $ref: '#/definitions/Specification'
        - name: Authorization
          in: header
          description: Authorization
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Specification'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
        - service-specification-resource
      summary: updateSpecification
      operationId: updateSpecificationUsingPUT
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: specification
          description: specification
          required: true
          schema:
            $ref: '#/definitions/Specification'
        - name: Authorization
          in: header
          description: Authorization
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Specification'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/api/serviceSpecification/{id}':
    get:
      tags:
        - service-specification-resource
      summary: getAllSpecificationsById
      operationId: getAllSpecificationsByIdUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: page
          in: query
          description: Page number of the requested page
          required: false
          type: integer
          format: int32
        - name: size
          in: query
          description: Size of a page
          required: false
          type: integer
          format: int32
        - name: id
          in: path
          description: id
          required: true
          type: string
        - name: sort
          in: query
          description: >-
            Sorting criteria in the format: property(,asc|desc). Default sort
            order is ascending. Multiple sort criteria are supported.
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Specification'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/api/serviceSpecification/{id}/{version}':
    get:
      tags:
        - service-specification-resource
      summary: getSpecification
      description: >-
        Returns the service specification with the specified id and version. Use
        version 'latest' to get the newest one.
      operationId: getSpecificationUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: string
        - name: version
          in: path
          description: version
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Specification'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
      tags:
        - service-specification-resource
      summary: deleteSpecification
      operationId: deleteSpecificationUsingDELETE
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: string
        - name: version
          in: path
          description: version
          required: true
          type: string
        - name: Authorization
          in: header
          description: Authorization
          required: true
          type: string
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  '/api/serviceSpecification/{id}/{version}/status':
    put:
      tags:
        - service-specification-resource
      summary: updateSpecificationStatus
      operationId: updateSpecificationStatusUsingPUT
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: string
        - name: version
          in: path
          description: version
          required: true
          type: string
        - name: status
          in: query
          description: status
          required: true
          type: string
        - name: Authorization
          in: header
          description: Authorization
          required: true
          type: string
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/specification-templates:
    get:
      tags:
        - specification-template-resource
      summary: getAllSpecificationTemplates
      operationId: getAllSpecificationTemplatesUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: page
          in: query
          description: Page number of the requested page
          required: false
          type: integer
          format: int32
        - name: size
          in: query
          description: Size of a page
          required: false
          type: integer
          format: int32
        - name: sort
          in: query
          description: >-
            Sorting criteria in the format: property(,asc|desc). Default sort
            order is ascending. Multiple sort criteria are supported.
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/SpecificationTemplate'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - specification-template-resource
      summary: createSpecificationTemplate
      operationId: createSpecificationTemplateUsingPOST
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: specificationTemplate
          description: specificationTemplate
          required: true
          schema:
            $ref: '#/definitions/SpecificationTemplate'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SpecificationTemplate'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
        - specification-template-resource
      summary: updateSpecificationTemplate
      operationId: updateSpecificationTemplateUsingPUT
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: specificationTemplate
          description: specificationTemplate
          required: true
          schema:
            $ref: '#/definitions/SpecificationTemplate'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SpecificationTemplate'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/api/specification-templates/{id}':
    get:
      tags:
        - specification-template-resource
      summary: getSpecificationTemplate
      operationId: getSpecificationTemplateUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SpecificationTemplate'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
      tags:
        - specification-template-resource
      summary: deleteSpecificationTemplate
      operationId: deleteSpecificationTemplateUsingDELETE
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /api/technicalDesign:
    get:
      tags:
        - technical-design-resource
      summary: getAllDesigns
      operationId: getAllDesignsUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: page
          in: query
          description: Page number of the requested page
          required: false
          type: integer
          format: int32
        - name: size
          in: query
          description: Size of a page
          required: false
          type: integer
          format: int32
        - name: sort
          in: query
          description: >-
            Sorting criteria in the format: property(,asc|desc). Default sort
            order is ascending. Multiple sort criteria are supported.
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Design'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - technical-design-resource
      summary: createDesign
      operationId: createDesignUsingPOST
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: design
          description: design
          required: true
          schema:
            $ref: '#/definitions/Design'
        - name: Authorization
          in: header
          description: Authorization
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Design'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
        - technical-design-resource
      summary: updateDesign
      operationId: updateDesignUsingPUT
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: design
          description: design
          required: true
          schema:
            $ref: '#/definitions/Design'
        - name: Authorization
          in: header
          description: Authorization
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Design'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/api/technicalDesign/{id}':
    get:
      tags:
        - technical-design-resource
      summary: getAllDesignsById
      operationId: getAllDesignsByIdUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: page
          in: query
          description: Page number of the requested page
          required: false
          type: integer
          format: int32
        - name: size
          in: query
          description: Size of a page
          required: false
          type: integer
          format: int32
        - name: id
          in: path
          description: id
          required: true
          type: string
        - name: sort
          in: query
          description: >-
            Sorting criteria in the format: property(,asc|desc). Default sort
            order is ascending. Multiple sort criteria are supported.
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Design'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/api/technicalDesign/{id}/{version}':
    get:
      tags:
        - technical-design-resource
      summary: getDesign
      description: >-
        Returns the technical design with the specified id and version. Use
        version 'latest' to get the newest one.
      operationId: getDesignUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: string
        - name: version
          in: path
          description: version
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Design'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
      tags:
        - technical-design-resource
      summary: deleteDesign
      operationId: deleteDesignUsingDELETE
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: string
        - name: version
          in: path
          description: version
          required: true
          type: string
        - name: Authorization
          in: header
          description: Authorization
          required: true
          type: string
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  '/api/technicalDesign/{id}/{version}/status':
    put:
      tags:
        - technical-design-resource
      summary: updateDesignStatus
      operationId: updateDesignStatusUsingPUT
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: string
        - name: version
          in: path
          description: version
          required: true
          type: string
        - name: status
          in: query
          description: status
          required: true
          type: string
        - name: Authorization
          in: header
          description: Authorization
          required: true
          type: string
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/xmls:
    get:
      tags:
        - xml-resource
      summary: getAllXmls
      operationId: getAllXmlsUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: page
          in: query
          description: Page number of the requested page
          required: false
          type: integer
          format: int32
        - name: size
          in: query
          description: Size of a page
          required: false
          type: integer
          format: int32
        - name: sort
          in: query
          description: >-
            Sorting criteria in the format: property(,asc|desc). Default sort
            order is ascending. Multiple sort criteria are supported.
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Xml'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - xml-resource
      summary: createXml
      operationId: createXmlUsingPOST
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: xml
          description: xml
          required: true
          schema:
            $ref: '#/definitions/Xml'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Xml'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
        - xml-resource
      summary: updateXml
      operationId: updateXmlUsingPUT
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: xml
          description: xml
          required: true
          schema:
            $ref: '#/definitions/Xml'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Xml'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/api/xmls/{id}':
    get:
      tags:
        - xml-resource
      summary: getXml
      operationId: getXmlUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Xml'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
      tags:
        - xml-resource
      summary: deleteXml
      operationId: deleteXmlUsingDELETE
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /api/xsds:
    get:
      tags:
        - xsd-resource
      summary: getAllXsds
      operationId: getAllXsdsUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: page
          in: query
          description: Page number of the requested page
          required: false
          type: integer
          format: int32
        - name: size
          in: query
          description: Size of a page
          required: false
          type: integer
          format: int32
        - name: sort
          in: query
          description: >-
            Sorting criteria in the format: property(,asc|desc). Default sort
            order is ascending. Multiple sort criteria are supported.
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Xsd'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - xsd-resource
      summary: createXsd
      operationId: createXsdUsingPOST
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: xsd
          description: xsd
          required: true
          schema:
            $ref: '#/definitions/Xsd'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Xsd'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
        - xsd-resource
      summary: updateXsd
      operationId: updateXsdUsingPUT
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: xsd
          description: xsd
          required: true
          schema:
            $ref: '#/definitions/Xsd'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Xsd'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/api/xsds/{id}':
    get:
      tags:
        - xsd-resource
      summary: getXsd
      operationId: getXsdUsingGET
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Xsd'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
      tags:
        - xsd-resource
      summary: deleteXsd
      operationId: deleteXsdUsingDELETE
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
definitions:
  Design:
    type: object
    properties:
      comment:
        type: string
      designAsDoc:
        $ref: '#/definitions/Doc'
      designAsXml:
        $ref: '#/definitions/Xml'
      designId:
        type: string
      docs:
        type: array
        items:
          $ref: '#/definitions/Doc'
      id:
        type: integer
        format: int64
      implementedSpecificationVersion:
        $ref: '#/definitions/SpecificationTemplate'
      name:
        type: string
      organisationId:
        type: string
      organizationId:
        type: string
      specifications:
        type: array
        items:
          $ref: '#/definitions/Specification'
      status:
        type: string
      version:
        type: string
    description: >-
      Holds a description of a technical design.A design can be compatible to
      one or morespecification templates.It has at least a technical
      representation of thedescriptiion in form of an XML and a filled out
      templateas e.g. word document.
  SpecificationTemplate:
    type: object
    properties:
      comment:
        type: string
      docs:
        type: array
        items:
          $ref: '#/definitions/Doc'
      guidelineDoc:
        $ref: '#/definitions/Doc'
      id:
        type: integer
        format: int64
      name:
        type: string
      templateDoc:
        $ref: '#/definitions/Doc'
      type:
        type: string
        enum:
          - SPECIFICATION
          - DESIGN
          - INSTANCE
      version:
        type: string
      xsds:
        type: array
        items:
          $ref: '#/definitions/Xsd'
    description: >-
      A SpecificationTemplate contains information on how to define a aspects
      ofa service.It has a type do differentiate between e.g. logical
      definitions andconcrete service instances.Templates will evolve, that's
      why they have a version.
  Instance:
    type: object
    properties:
      comment:
        type: string
      designs:
        type: array
        items:
          $ref: '#/definitions/Design'
      docs:
        type: array
        items:
          $ref: '#/definitions/Doc'
      endpointType:
        type: string
      endpointUri:
        type: string
      geometry:
        $ref: '#/definitions/JsonNode'
      geometryContentType:
        type: string
      id:
        type: integer
        format: int64
      implementedSpecificationVersion:
        $ref: '#/definitions/SpecificationTemplate'
      instanceAsDoc:
        $ref: '#/definitions/Doc'
      instanceAsXml:
        $ref: '#/definitions/Xml'
      instanceId:
        type: string
      keywords:
        type: string
      name:
        type: string
      organizationId:
        type: string
      status:
        type: string
      unlocode:
        type: string
      version:
        type: string
    description: >-
      Holds a description of an service instance.An instance can be compatible
      to one or morespecification templates.It has at least a technical
      representation of thedescriptiion in form of an XML and a filled out
      templateas e.g. word document.
  Xml:
    type: object
    properties:
      comment:
        type: string
      content:
        type: string
      contentContentType:
        type: string
      id:
        type: integer
        format: int64
      name:
        type: string
    description: >-
      A technical way to describe aspects if a service.The Xml should validate
      against a XSD from a SpecificationTemplate.
  Xsd:
    type: object
    properties:
      comment:
        type: string
      content:
        type: array
        items:
          type: string
          format: byte
      contentContentType:
        type: string
      id:
        type: integer
        format: int64
      name:
        type: string
    description: 'A schema for describing aspects of a service in a XML document.        '
  Doc:
    type: object
    properties:
      comment:
        type: string
      filecontent:
        type: string
      filecontentContentType:
        type: string
      id:
        type: integer
        format: int64
      mimetype:
        type: string
      name:
        type: string
    description: >-
      A doc represents a human readable document that can be attached to various
      objects.This could be an office document containing guidelines linked,to a
      service specification, or a Getting Started PDF attached toan service
      instance.
  Specification:
    type: object
    properties:
      comment:
        type: string
      docs:
        type: array
        items:
          $ref: '#/definitions/Doc'
      id:
        type: integer
        format: int64
      implementedSpecificationVersion:
        $ref: '#/definitions/SpecificationTemplate'
      keywords:
        type: string
      name:
        type: string
      organisationId:
        type: string
      organizationId:
        type: string
      specAsDoc:
        $ref: '#/definitions/Doc'
      specAsXml:
        $ref: '#/definitions/Xml'
      specificationId:
        type: string
      status:
        type: string
      version:
        type: string
    description: >-
      Holds a logical description of a service.A specification can be compatible
      to one or morespecification templates.It has at least a technical
      representation of the servicedescriptiion in form of an XML and a filled
      out service templateas e.g. word document.
  JsonNode:
    type: object
    properties:
      array:
        type: boolean
      bigDecimal:
        type: boolean
      bigInteger:
        type: boolean
      binary:
        type: boolean
      boolean:
        type: boolean
      containerNode:
        type: boolean
      double:
        type: boolean
      float:
        type: boolean
      floatingPointNumber:
        type: boolean
      int:
        type: boolean
      integralNumber:
        type: boolean
      long:
        type: boolean
      missingNode:
        type: boolean
      nodeType:
        type: string
        enum:
          - ARRAY
          - BINARY
          - BOOLEAN
          - MISSING
          - 'NULL'
          - NUMBER
          - OBJECT
          - POJO
          - STRING
      number:
        type: boolean
      object:
        type: boolean
      pojo:
        type: boolean
      short:
        type: boolean
      textual:
        type: boolean
      valueNode:
        type: boolean
